!function(){"use strict";angular.module("app",["ngRoute","mobile-angular-ui","app.main","app.home","ngNotify","app.user","app.necesidad","mobile-angular-ui.gestures"]).run(["$transform",function(e){window.$transform=e}]).config(["$routeProvider",function(e){e.when("/",{templateUrl:"scripts/home/home.html",reloadOnSearch:!1}).when("/",{templateUrl:"scripts/home/scroll.html",reloadOnSearch:!1,controller:"HomeCtrl",controllerAs:"HomeCtrl"}).when("/necesidad/:id",{templateUrl:"scripts/necesidad/detalle.html",controller:"NecesidadDetalleCtrl",controllerAs:"DetalleCtrl"}).when("/necesidad/:id/editar",{templateUrl:"scripts/necesidad/editar.html",controller:"NecesidadDetalleCtrl",controllerAs:"DetalleCtrl"}).when("/categoria/:categoria",{templateUrl:"scripts/necesidad/categoria.html",reloadOnSearch:!1,controller:"CategoriaCtrl",controllerAs:"CategoriaCtrl"}).otherwise({redirectTo:"/"})}])}(),function(){"use strict";angular.module("app.home",[]).controller("HomeCtrl",["Necesidad","ngNotify",function(e,r){var t=this;e.load().success(function(e){t.necesidades=e}).error(function(e){r.set(e,"error")})}])}(),angular.module("app.directives",[]).directive("money",function(){function e(e,t,n,i){function o(e){var r=Math.pow(10,d);return Math.round(e*r)/r}function a(e){return parseFloat(e).toFixed(d)}function s(e){return i.$isEmpty(e)?"":""+e}var c,u=parseFloat(n.min||0),d=parseFloat(n.precision||2);i.$parsers.push(function(e){angular.isUndefined(e)&&(e=""),0===e.indexOf(".")&&(e="0"+e),0===e.indexOf("-")&&(u>=0?(e=null,i.$setViewValue(""),i.$render()):"-"===e&&(e=""));var t=i.$isEmpty(e);return t||r.test(e)?c=""===e?null:t?e:parseFloat(e):(i.$setViewValue(s(c)),i.$render()),i.$setValidity("number",!0),c}),i.$formatters.push(s);var l=function(e){return!i.$isEmpty(e)&&u>e?void i.$setValidity("min",!1):(i.$setValidity("min",!0),e)};if(i.$parsers.push(l),i.$formatters.push(l),n.max){var p=parseFloat(n.max),f=function(e){return!i.$isEmpty(e)&&e>p?void i.$setValidity("max",!1):(i.$setValidity("max",!0),e)};i.$parsers.push(f),i.$formatters.push(f)}d>-1&&(i.$parsers.push(function(e){return e?o(e):e}),i.$formatters.push(function(e){return e?a(e):e})),t.bind("blur",function(){var e=i.$modelValue;e&&(i.$viewValue=a(e),i.$render())})}var r=/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/;return{restrict:"A",require:"ngModel",link:e}}).directive("numbersOnly",function(){return{restrict:"A",require:"ngModel",link:function(e,r,t,n){n.$parsers.push(function(e){if(void 0===e)return"";var r=e.replace(/[^0-9+.]/g,"");return r!==e&&(n.$setViewValue(r),n.$render()),r})}}}),angular.module("app.filters",[]).filter("dinero",["$filter","$locale",function(e,r){var t=e("currency"),n=r.NUMBER_FORMATS;return function(e,r,i){0===r&&(r=-1);var o=t(e,i),a=o.indexOf(n.DECIMAL_SEP)+1,s="";return a<o.indexOf(n.CURRENCY_SYM)&&(s=" "+n.CURRENCY_SYM),o.substring(0,a+r)+s}}]),function(){"use strict";angular.module("app.main",["app.directives","app.filters"]).controller("MainController",["$rootScope","$scope","User",function(e,r,t){var n=this;t.me().success(function(e){n.user=e}).error(function(e){console.log(e)}),r.userAgent=navigator.userAgent,e.$on("$routeChangeStart",function(){e.loading=!0}),e.$on("$routeChangeSuccess",function(){e.loading=!1}),r.bottomReached=function(){alert("Congrats you scrolled to the end of the list!")},r.notices=[];for(var i=0;10>i;i++)r.notices.push({icon:"envelope",message:"Notice "+(i+1)});r.deleteNotice=function(e){var t=r.notices.indexOf(e);t>-1&&r.notices.splice(t,1)}}])}(),function(){"use strict";angular.module("app.necesidad.categoria",[]).controller("CategoriaCtrl",["Necesidad","$routeParams",function(e,r){var t=this;e.categoria(r.categoria).success(function(e){t.necesidades=e.necesidades,t.categoria=e.categoria}).error(function(e){console.error(e)})}])}(),function(){"use strict";angular.module("app.comentario.service",[]).factory("Comentario",["$http",function(e){return{"delete":function(r){return e["delete"]("/api/comentarios/"+r)},create:function(r){return e({data:r,method:"POST",url:"/api/necesidades/"+r.necesidadId+"/comentarios"})},update:function(r){return e({data:r,method:"PUT",url:"/api/comentarios/"+r.id})}}}])}(),function(){"use strict";angular.module("app.necesidad.detalle",[]).controller("NecesidadDetalleCtrl",["Necesidad","ngNotify","$routeParams","$window","Comentario",function(e,r,t,n,i){var o=this;o.necesidad={},o.ComentarioForm={},t.id&&e.show(t.id).success(function(e){o.necesidad=e}).error(function(e){r.set(e,"error")}),o.save=function(){e.update(o.necesidad).success(function(e){r.set(e,"success")}).error(function(e){r.set(e,"error")})},o.comentar=function(){o.ComentarioForm.necesidadId=o.necesidad.id,o.ComentarioForm.userId=o.necesidad.userId,o.Comentario.createdAt=new Date,i.create(o.ComentarioForm).success(function(e){r.set(e,"success"),o.necesidad.comentarios.push(o.ComentarioForm)}).error(function(e){r.set(e,"error")})},o["delete"]=function(){var t=confirm("Realmente deseas eliminar esta publicaci√≥n?");t&&e["delete"](o.necesidad.id).success(function(e){r.set(e,"success"),n.location="#/"}).error(function(e){r.set(e,"error")})}}])}(),function(){"use strict";angular.module("app.necesidad",["app.necesidad.service","app.necesidad.nueva","app.necesidad.detalle","app.necesidad.categoria","app.comentario.service"]).controller("NecesidadesCtrl",["Necesidad","ngNotify",function(e,r){var t=this;e.load().success(function(e){t.necesidades=e}).error(function(e){r.set(e,"error")})}])}(),function(){"use strict";angular.module("app.necesidad.service",[]).factory("Necesidad",["$http",function(e){return{load:function(r){return e.get("/api/necesidades")},show:function(r){return e.get("/api/necesidades/"+r)},categoria:function(r){return e.get("/api/categorias/"+r)},"delete":function(r){return e["delete"]("/api/necesidades/"+r)},create:function(r){return e({data:r,method:"POST",url:"/api/necesidades"})},update:function(r){return e({data:r,method:"PUT",url:"/api/necesidades/"+r.id})}}}])}(),function(){"use strict";angular.module("app.necesidad.nueva",[]).controller("NuevaNecesidadCtrl",["Necesidad","ngNotify","$window",function(e,r,t){var n=this;n.NecesidadForm={},n.create=function(){e.create(n.NecesidadForm).success(function(e){r.set(e,"success"),t.location="#/necesidad/"+e}).error(function(e){r.set(e,"error")})}}])}(),function(){"use strict";angular.module("app.user",["app.user.service"]).controller("UserCtrl",["$scope","User",function(e,r){r.one("profile").get().then(function(r){e.FormUser=r})["catch"](function(e){alert(e.data)}),e.updateProfile=function(){e.FormUser.put()["catch"](function(e){alert(e.data)})}}])}(),function(){"use strict";angular.module("app.user.service",[]).factory("User",["$http",function(e){return{me:function(){return e.get("/api/users/profile")}}}])}();
//# sourceMappingURL=data:application/json;base64,
